package com.ecom.test;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import com.ecom.exception.ProductNotFoundException;
import com.ecom.model.Category;
import com.ecom.model.Product;
import com.ecom.service.CategoryService;
import com.ecom.service.ProductService;

public class ProductServiceTest {
	
	private ProductService productService;
    private CategoryService categoryService;

    @BeforeEach
    void setup() {
        productService = new ProductService();
        categoryService = new CategoryService();
    }

    @Test
    void testAddAndFetchProduct() throws ProductNotFoundException {
        Category category = new Category(201, "Mobiles");
        categoryService.addCategory(category);

        Product p = new Product("iPhone 15", 90000.0, 10, category);
        productService.addProduct(p);

        Product fetched = productService.getById(1);
        assertEquals("iPhone 15", fetched.getProductName());
    }

    @Test
    void testGetProductByInvalidId() {
        assertThrows(ProductNotFoundException.class, () -> productService.getById(999));
    }

    @Test
    void testGetProductsByCategory() {
        List<Product> products = productService.getProductsByCategory(201);
        assertNotNull(products);
    }

}
